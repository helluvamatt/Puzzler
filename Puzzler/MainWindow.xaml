<mah:MetroWindow
	x:Class="Puzzler.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:ic="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:conv="clr-namespace:Puzzler.Converters"
	xmlns:v="clr-namespace:Puzzler.Views"
	xmlns:vm="clr-namespace:Puzzler.ViewModels"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type={x:Type vm:ShellViewModel}, IsDesignTimeCreatable=False}"
	ResizeMode="CanResizeWithGrip"
	Title="Puzzler" Icon="appicon.ico"
	Height="720" Width="1280">
	<mah:MetroWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Backgrounds/Backgrounds.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<conv:NullToVisibilityConverter x:Key="nullToVisibilityConverter" />
			<mah:CustomDialog x:Key="messageDialog" Title="{Binding Title}" d:DataContext="{d:DesignInstance Type={x:Type vm:MessageDialogViewModel}, IsDesignTimeCreatable=False}">
				<Grid Margin="4">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="auto" />
						<RowDefinition Height="auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<ic:PackIconFontAwesome Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Top" Width="32" Height="32" Margin="4">
						<ic:PackIconFontAwesome.Style>
							<Style TargetType="{x:Type ic:PackIconFontAwesome}">
								<Setter Property="Visibility" Value="Collapsed" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding IconType}" Value="Error">
										<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Validation5}" />
										<Setter Property="Kind" Value="TimesCircleSolid" />
										<Setter Property="Visibility" Value="Visible" />
									</DataTrigger>
									<DataTrigger Binding="{Binding IconType}" Value="Info">
										<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.AccentBase}" />
										<Setter Property="Kind" Value="InfoCircleSolid" />
										<Setter Property="Visibility" Value="Visible" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ic:PackIconFontAwesome.Style>
					</ic:PackIconFontAwesome>
					<TextBlock Grid.Row="0" Grid.Column="1" Margin="4" Text="{Binding Message}" />
					<Expander Grid.Row="1" Grid.Column="1" Margin="4" Header="Details" Visibility="{Binding DetailedMessage, Converter={StaticResource nullToVisibilityConverter}}">
						<TextBlock FontFamily="Courier New" FontSize="10pt" Margin="8" Text="{Binding DetailedMessage}" />
					</Expander>
					<Button Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="4" Padding="16,4" Style="{StaticResource MahApps.Styles.Button.Dialogs.Accent}" Click="OnCustomDialogOKClick">OK</Button>
				</Grid>
			</mah:CustomDialog>
			<DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type vm:MenuItemViewModel}">
				<Grid Height="48">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<ContentControl Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Icon}" Focusable="False" />
					<TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="16" Text="{Binding Label}" />
				</Grid>
			</DataTemplate>
			<x:Array x:Key="MenuItems" Type="{x:Type vm:MenuItemViewModel}">
				<vm:MenuItemViewModel Label="New Puzzle" NavigationType="{x:Type v:NewPuzzleView}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateNewPuzzleCommand}">
					<vm:MenuItemViewModel.Icon>
						<ic:PackIconFontAwesome Width="28" Height="28" Kind="FileRegular" />
					</vm:MenuItemViewModel.Icon>
				</vm:MenuItemViewModel>
				<vm:MenuItemViewModel Label="Puzzle" NavigationType="{x:Type v:PuzzleView}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigatePuzzleCommand}">
					<vm:MenuItemViewModel.Icon>
						<ic:PackIconFontAwesome Width="28" Height="28" Kind="PuzzlePieceSolid" />
					</vm:MenuItemViewModel.Icon>
				</vm:MenuItemViewModel>
			</x:Array>
			<x:Array x:Key="OptionsMenuItems" Type="{x:Type vm:MenuItemViewModel}">
				<vm:MenuItemViewModel Label="Settings" NavigationType="{x:Type v:SettingsView}" Command="{Binding Source={x:Reference hamburgerMenu}, Path=DataContext.NavigateSettingsCommand}">
					<vm:MenuItemViewModel.Icon>
						<ic:PackIconFontAwesome Width="28" Height="28" Kind="WrenchSolid" />
					</vm:MenuItemViewModel.Icon>
				</vm:MenuItemViewModel>
			</x:Array>
		</ResourceDictionary>
	</mah:MetroWindow.Resources>
	<mah:HamburgerMenu x:Name="hamburgerMenu" DisplayMode="CompactOverlay"
					   ItemTemplate="{StaticResource MenuItemTemplate}"
					   ItemsSource="{StaticResource MenuItems}"
					   OptionsItemTemplate="{StaticResource MenuItemTemplate}"
					   OptionsItemsSource="{StaticResource OptionsMenuItems}">
		<mah:HamburgerMenu.Content>
			<DockPanel LastChildFill="True">
				<StatusBar DockPanel.Dock="Bottom">
					<StatusBarItem Content="{Binding Path=CurrentImageSource, TargetNullValue=No image loaded}"  />
					<Separator Style="{StaticResource MahApps.Styles.Separator.StatusBar}" />
					<StatusBarItem Content="{Binding Path=PuzzleSize.Description, TargetNullValue=No puzzle created}" />
				</StatusBar>
				<Frame Source="{Binding CurrentPage}" Navigated="OnFrameNavigated">
					<Frame.Style>
						<Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
							<Setter Property="ClipToBounds" Value="True" />
							<Setter Property="NavigationUIVisibility" Value="Hidden" />
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<mah:TransitioningContentControl Content="{Binding}" RestartTransitionOnContentChange="True" Transition="Default" />
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Frame.Style>
				</Frame>
			</DockPanel>
		</mah:HamburgerMenu.Content>
	</mah:HamburgerMenu>
</mah:MetroWindow>
